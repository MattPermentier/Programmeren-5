#name: Laravel
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#
#  create-deployment-artifacts:
#    name: Create deployment artifacts
#    runs-on: ubuntu-latest
#    outputs:
#      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
#
#    steps:
#      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
#        with:
#          php-version: '8.0'
#      - uses: actions/checkout@v3
#      - name: Copy .env
#        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#      - name: Install Dependencies
#        run: composer update
#      - name: Generate key
#        run: php artisan key:generate
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
#      - name: Create Database
#        run: |
#          mkdir -p database
#          touch database/database.mysql
#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        env:
#          DB_CONNECTION: mysql
#          DB_DATABASE: database/database.mysql
#        run: vendor/bin/phpunit
#
#      - name: Export deployment matrix
#        id: export-deployment-matrix
#        run: |
#          JSON="${cat ./deployment-config.json)"
#          JSON="${JSON//'%'/'%25'}"
#          JSON="${JSON//$'\n'/'%0A'}"
#          JSON="${JSON//$'\r'/'%0D'}"
#          echo "::set-output name=deployment-matrix::$JSON"
#
#  prepare-release-on-server:
#    runs-on: ubuntu-latest
#    needs: create-deployment-artifacts
#    strategy:
#      matrix:
#        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.deployment-matrtix) }}
#      steps:
#        - uses: actions/download-artifacts@v2
#          with:
#            name: app-build


name: Deploy Application

on:
  push:
    branches: [ master ]

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Compile CSS and Javascript
              run: |
                npm install
                npm run prod

      - name: Configure PHP 8.0
        uses: shivammathur/setup-php@master
          with:
            php-version: 8.0
              extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
      - name: Composer install
        run: |
        composer install --no-dev --no-interaction --prefer-dist
